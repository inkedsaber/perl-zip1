#!/usr/bin/env perl
use strict;
use warnings;

use Term::ANSIColor;

use FindBin;
use lib "$FindBin::Bin/..";

use Getopt::Long 'HelpMessage';

Getopt::Long::Configure ("bundling");

GetOptions(
    "dir|d=s"   => \ my $dir,
    "extract|e" => \ my $extract,
    "verbose|v" => \ my $verbose,
    # "version|v" => \(my $ver = '0.2.2'),
    "help|h"    => sub { HelpMessage(0) },
) or HelpMessage(1);

my $defdir = "$FindBin::Bin/../default_dir.txt";
if (open(my $fh, '<:encoding(UTF-8)', $defdir)) {
    my $row = <$fh>;
    print colored("OK: found path '$row' in '$FindBin::Bin/../default_dir.txt'\n", 'bright_green');
    $dir = $row;
}

HelpMessage(1) unless $dir;

=head1 SYNOPSIS

  --dir,-d        Directory where '.zip1' files located (required)
  --extract,-e    Extract content from renamed files
  --verbose,-v    Show additional info
  --help,-h       Print this help

=head1 VERSION

0.2.2.1

=cut

# For future use:
# use utf8;
# use Encode;

chdir($dir)
  or die colored("Error: can't chdir to $dir $!", 'red');

opendir my $dh, $dir
  or die colored("Error: couldn't open dir: $!\n", 'red');

foreach (readdir $dh) {
    next if /^\.+$/;
    if ((my $newname = $_) =~ s/zip1$/zip/) {

        print colored("OK: $_ -> $newname\n", 'bright_green');
        rename($_, $newname)
          or die colored("Error: can't rename: $!", 'red');

        if ($extract) {
            if ($verbose) {
                system('unzip', $newname) == 0
                  or die colored("Error: unzipping $newname failed: $?", 'red');
            } else {
                system('unzip', '-q', $newname) == 0
                  or die colored("Error: unzipping $newname failed: $?", 'red');
            }
            print colored("OK: $newname\'s content is extracted\n", 'bright_green');
        }

        unlink $newname;
    }
}
closedir $dh;


#!/usr/bin/env perl
use strict;
use warnings;

use Term::ANSIColor;
use Getopt::Long;

my $help;
my $extract;
my $verbose;
GetOptions(
    "help"    => \$help,
    "extract" => \$extract,
    "verbose" => \$verbose,
) or die("Error in command line arguments\n");

# For future use:
# use utf8;
# use Encode;

sub help {
    die colored(
        "@_"
          . "Usage:\t/path/to/zip1 [options] [path]"
          . "\n\t\t-h, --help"
          . "\n\t\t-e, --extract"
          . "\n\t\t-v, --verbose\n",
        'yellow');
}

if ($help) {
    help();
}

(my $dir = $ARGV[0])
  or help("Error: please define path.\n");

chdir($dir)
  or die colored("Error: can't chdir to $dir $!", 'red');

opendir my $dh, $dir
  or die colored("Error: couldn't open dir: $!\n", 'red');

foreach (readdir $dh) {
    next if /^\.+$/;
    if ((my $newname = $_) =~ s/zip1$/zip/) {

        print colored("OK: $_ -> $newname\n", 'bright_green');
        rename($_, $newname)
          or die colored("Error: can't rename: $!", 'red');

        if ($extract) {
            if ($verbose) {
                system('unzip', $newname) == 0
                  or die colored("Error: unzipping $newname failed: $?", 'red');
            } else {
                system('unzip', '-q', $newname) == 0
                  or die colored("Error: unzipping $newname failed: $?", 'red');
            }
            print colored("OK: $newname\'s content is extracted\n", 'bright_green');
        }

        unlink $newname;
    }
}
closedir $dh;

